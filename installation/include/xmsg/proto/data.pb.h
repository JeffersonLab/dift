// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data.proto

#ifndef PROTOBUF_INCLUDED_data_2eproto
#define PROTOBUF_INCLUDED_data_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_data_2eproto 

namespace protobuf_data_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_data_2eproto
namespace xmsg {
namespace proto {
class Data;
class DataDefaultTypeInternal;
extern DataDefaultTypeInternal _Data_default_instance_;
class Payload;
class PayloadDefaultTypeInternal;
extern PayloadDefaultTypeInternal _Payload_default_instance_;
class Payload_Item;
class Payload_ItemDefaultTypeInternal;
extern Payload_ItemDefaultTypeInternal _Payload_Item_default_instance_;
}  // namespace proto
}  // namespace xmsg
namespace google {
namespace protobuf {
template<> ::xmsg::proto::Data* Arena::CreateMaybeMessage<::xmsg::proto::Data>(Arena*);
template<> ::xmsg::proto::Payload* Arena::CreateMaybeMessage<::xmsg::proto::Payload>(Arena*);
template<> ::xmsg::proto::Payload_Item* Arena::CreateMaybeMessage<::xmsg::proto::Payload_Item>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace xmsg {
namespace proto {

enum Data_Type {
  Data_Type_T_VLSINT32 = 1,
  Data_Type_T_VLSINT64 = 2,
  Data_Type_T_FLSINT32 = 3,
  Data_Type_T_FLSINT64 = 4,
  Data_Type_T_FLOAT = 5,
  Data_Type_T_DOUBLE = 6,
  Data_Type_T_STRING = 7,
  Data_Type_T_BYTES = 8,
  Data_Type_T_VLSINT32A = 9,
  Data_Type_T_VLSINT64A = 10,
  Data_Type_T_FLSINT32A = 11,
  Data_Type_T_FLSINT64A = 12,
  Data_Type_T_FLOATA = 13,
  Data_Type_T_DOUBLEA = 14,
  Data_Type_T_STRINGA = 15,
  Data_Type_T_BYTESA = 16,
  Data_Type_T_PAYLOAD = 17
};
bool Data_Type_IsValid(int value);
const Data_Type Data_Type_Type_MIN = Data_Type_T_VLSINT32;
const Data_Type Data_Type_Type_MAX = Data_Type_T_PAYLOAD;
const int Data_Type_Type_ARRAYSIZE = Data_Type_Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Data_Type_descriptor();
inline const ::std::string& Data_Type_Name(Data_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Data_Type_descriptor(), value);
}
inline bool Data_Type_Parse(
    const ::std::string& name, Data_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Data_Type>(
    Data_Type_descriptor(), name, value);
}
// ===================================================================

class Data : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xmsg.proto.Data) */ {
 public:
  Data();
  virtual ~Data();

  Data(const Data& from);

  inline Data& operator=(const Data& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Data(Data&& from) noexcept
    : Data() {
    *this = ::std::move(from);
  }

  inline Data& operator=(Data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Data& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Data* internal_default_instance() {
    return reinterpret_cast<const Data*>(
               &_Data_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Data* other);
  friend void swap(Data& a, Data& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Data* New() const final {
    return CreateMaybeMessage<Data>(NULL);
  }

  Data* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Data>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Data& from);
  void MergeFrom(const Data& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Data* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Data_Type Type;
  static const Type T_VLSINT32 =
    Data_Type_T_VLSINT32;
  static const Type T_VLSINT64 =
    Data_Type_T_VLSINT64;
  static const Type T_FLSINT32 =
    Data_Type_T_FLSINT32;
  static const Type T_FLSINT64 =
    Data_Type_T_FLSINT64;
  static const Type T_FLOAT =
    Data_Type_T_FLOAT;
  static const Type T_DOUBLE =
    Data_Type_T_DOUBLE;
  static const Type T_STRING =
    Data_Type_T_STRING;
  static const Type T_BYTES =
    Data_Type_T_BYTES;
  static const Type T_VLSINT32A =
    Data_Type_T_VLSINT32A;
  static const Type T_VLSINT64A =
    Data_Type_T_VLSINT64A;
  static const Type T_FLSINT32A =
    Data_Type_T_FLSINT32A;
  static const Type T_FLSINT64A =
    Data_Type_T_FLSINT64A;
  static const Type T_FLOATA =
    Data_Type_T_FLOATA;
  static const Type T_DOUBLEA =
    Data_Type_T_DOUBLEA;
  static const Type T_STRINGA =
    Data_Type_T_STRINGA;
  static const Type T_BYTESA =
    Data_Type_T_BYTESA;
  static const Type T_PAYLOAD =
    Data_Type_T_PAYLOAD;
  static inline bool Type_IsValid(int value) {
    return Data_Type_IsValid(value);
  }
  static const Type Type_MIN =
    Data_Type_Type_MIN;
  static const Type Type_MAX =
    Data_Type_Type_MAX;
  static const int Type_ARRAYSIZE =
    Data_Type_Type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Type_descriptor() {
    return Data_Type_descriptor();
  }
  static inline const ::std::string& Type_Name(Type value) {
    return Data_Type_Name(value);
  }
  static inline bool Type_Parse(const ::std::string& name,
      Type* value) {
    return Data_Type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated sint32 VLSINT32A = 9;
  int vlsint32a_size() const;
  void clear_vlsint32a();
  static const int kVLSINT32AFieldNumber = 9;
  ::google::protobuf::int32 vlsint32a(int index) const;
  void set_vlsint32a(int index, ::google::protobuf::int32 value);
  void add_vlsint32a(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      vlsint32a() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_vlsint32a();

  // repeated sint64 VLSINT64A = 10;
  int vlsint64a_size() const;
  void clear_vlsint64a();
  static const int kVLSINT64AFieldNumber = 10;
  ::google::protobuf::int64 vlsint64a(int index) const;
  void set_vlsint64a(int index, ::google::protobuf::int64 value);
  void add_vlsint64a(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      vlsint64a() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_vlsint64a();

  // repeated sfixed32 FLSINT32A = 11;
  int flsint32a_size() const;
  void clear_flsint32a();
  static const int kFLSINT32AFieldNumber = 11;
  ::google::protobuf::int32 flsint32a(int index) const;
  void set_flsint32a(int index, ::google::protobuf::int32 value);
  void add_flsint32a(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      flsint32a() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_flsint32a();

  // repeated sfixed64 FLSINT64A = 12;
  int flsint64a_size() const;
  void clear_flsint64a();
  static const int kFLSINT64AFieldNumber = 12;
  ::google::protobuf::int64 flsint64a(int index) const;
  void set_flsint64a(int index, ::google::protobuf::int64 value);
  void add_flsint64a(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      flsint64a() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_flsint64a();

  // repeated float FLOATA = 13;
  int floata_size() const;
  void clear_floata();
  static const int kFLOATAFieldNumber = 13;
  float floata(int index) const;
  void set_floata(int index, float value);
  void add_floata(float value);
  const ::google::protobuf::RepeatedField< float >&
      floata() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_floata();

  // repeated double DOUBLEA = 14;
  int doublea_size() const;
  void clear_doublea();
  static const int kDOUBLEAFieldNumber = 14;
  double doublea(int index) const;
  void set_doublea(int index, double value);
  void add_doublea(double value);
  const ::google::protobuf::RepeatedField< double >&
      doublea() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_doublea();

  // repeated string STRINGA = 15;
  int stringa_size() const;
  void clear_stringa();
  static const int kSTRINGAFieldNumber = 15;
  const ::std::string& stringa(int index) const;
  ::std::string* mutable_stringa(int index);
  void set_stringa(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_stringa(int index, ::std::string&& value);
  #endif
  void set_stringa(int index, const char* value);
  void set_stringa(int index, const char* value, size_t size);
  ::std::string* add_stringa();
  void add_stringa(const ::std::string& value);
  #if LANG_CXX11
  void add_stringa(::std::string&& value);
  #endif
  void add_stringa(const char* value);
  void add_stringa(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& stringa() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_stringa();

  // repeated bytes BYTESA = 16;
  int bytesa_size() const;
  void clear_bytesa();
  static const int kBYTESAFieldNumber = 16;
  const ::std::string& bytesa(int index) const;
  ::std::string* mutable_bytesa(int index);
  void set_bytesa(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_bytesa(int index, ::std::string&& value);
  #endif
  void set_bytesa(int index, const char* value);
  void set_bytesa(int index, const void* value, size_t size);
  ::std::string* add_bytesa();
  void add_bytesa(const ::std::string& value);
  #if LANG_CXX11
  void add_bytesa(::std::string&& value);
  #endif
  void add_bytesa(const char* value);
  void add_bytesa(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& bytesa() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_bytesa();

  // optional string STRING = 7;
  bool has_string() const;
  void clear_string();
  static const int kSTRINGFieldNumber = 7;
  const ::std::string& string() const;
  void set_string(const ::std::string& value);
  #if LANG_CXX11
  void set_string(::std::string&& value);
  #endif
  void set_string(const char* value);
  void set_string(const char* value, size_t size);
  ::std::string* mutable_string();
  ::std::string* release_string();
  void set_allocated_string(::std::string* string);

  // optional bytes BYTES = 8;
  bool has_bytes() const;
  void clear_bytes();
  static const int kBYTESFieldNumber = 8;
  const ::std::string& bytes() const;
  void set_bytes(const ::std::string& value);
  #if LANG_CXX11
  void set_bytes(::std::string&& value);
  #endif
  void set_bytes(const char* value);
  void set_bytes(const void* value, size_t size);
  ::std::string* mutable_bytes();
  ::std::string* release_bytes();
  void set_allocated_bytes(::std::string* bytes);

  // optional sint64 VLSINT64 = 2;
  bool has_vlsint64() const;
  void clear_vlsint64();
  static const int kVLSINT64FieldNumber = 2;
  ::google::protobuf::int64 vlsint64() const;
  void set_vlsint64(::google::protobuf::int64 value);

  // optional sint32 VLSINT32 = 1;
  bool has_vlsint32() const;
  void clear_vlsint32();
  static const int kVLSINT32FieldNumber = 1;
  ::google::protobuf::int32 vlsint32() const;
  void set_vlsint32(::google::protobuf::int32 value);

  // optional sfixed32 FLSINT32 = 3;
  bool has_flsint32() const;
  void clear_flsint32();
  static const int kFLSINT32FieldNumber = 3;
  ::google::protobuf::int32 flsint32() const;
  void set_flsint32(::google::protobuf::int32 value);

  // optional sfixed64 FLSINT64 = 4;
  bool has_flsint64() const;
  void clear_flsint64();
  static const int kFLSINT64FieldNumber = 4;
  ::google::protobuf::int64 flsint64() const;
  void set_flsint64(::google::protobuf::int64 value);

  // optional double DOUBLE = 6;
  bool has_double_() const;
  void clear_double_();
  static const int kDOUBLEFieldNumber = 6;
  double double_() const;
  void set_double_(double value);

  // optional float FLOAT = 5;
  bool has_float_() const;
  void clear_float_();
  static const int kFLOATFieldNumber = 5;
  float float_() const;
  void set_float_(float value);

  // optional .xmsg.proto.Data.Type type = 17;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 17;
  ::xmsg::proto::Data_Type type() const;
  void set_type(::xmsg::proto::Data_Type value);

  // @@protoc_insertion_point(class_scope:xmsg.proto.Data)
 private:
  void set_has_vlsint32();
  void clear_has_vlsint32();
  void set_has_vlsint64();
  void clear_has_vlsint64();
  void set_has_flsint32();
  void clear_has_flsint32();
  void set_has_flsint64();
  void clear_has_flsint64();
  void set_has_float_();
  void clear_has_float_();
  void set_has_double_();
  void clear_has_double_();
  void set_has_string();
  void clear_has_string();
  void set_has_bytes();
  void clear_has_bytes();
  void set_has_type();
  void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > vlsint32a_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > vlsint64a_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > flsint32a_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > flsint64a_;
  ::google::protobuf::RepeatedField< float > floata_;
  ::google::protobuf::RepeatedField< double > doublea_;
  ::google::protobuf::RepeatedPtrField< ::std::string> stringa_;
  ::google::protobuf::RepeatedPtrField< ::std::string> bytesa_;
  ::google::protobuf::internal::ArenaStringPtr string_;
  ::google::protobuf::internal::ArenaStringPtr bytes_;
  ::google::protobuf::int64 vlsint64_;
  ::google::protobuf::int32 vlsint32_;
  ::google::protobuf::int32 flsint32_;
  ::google::protobuf::int64 flsint64_;
  double double__;
  float float__;
  int type_;
  friend struct ::protobuf_data_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Payload_Item : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xmsg.proto.Payload.Item) */ {
 public:
  Payload_Item();
  virtual ~Payload_Item();

  Payload_Item(const Payload_Item& from);

  inline Payload_Item& operator=(const Payload_Item& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Payload_Item(Payload_Item&& from) noexcept
    : Payload_Item() {
    *this = ::std::move(from);
  }

  inline Payload_Item& operator=(Payload_Item&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Payload_Item& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Payload_Item* internal_default_instance() {
    return reinterpret_cast<const Payload_Item*>(
               &_Payload_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Payload_Item* other);
  friend void swap(Payload_Item& a, Payload_Item& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Payload_Item* New() const final {
    return CreateMaybeMessage<Payload_Item>(NULL);
  }

  Payload_Item* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Payload_Item>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Payload_Item& from);
  void MergeFrom(const Payload_Item& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Payload_Item* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // required .xmsg.proto.Data data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  private:
  const ::xmsg::proto::Data& _internal_data() const;
  public:
  const ::xmsg::proto::Data& data() const;
  ::xmsg::proto::Data* release_data();
  ::xmsg::proto::Data* mutable_data();
  void set_allocated_data(::xmsg::proto::Data* data);

  // @@protoc_insertion_point(class_scope:xmsg.proto.Payload.Item)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_data();
  void clear_has_data();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::xmsg::proto::Data* data_;
  friend struct ::protobuf_data_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Payload : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xmsg.proto.Payload) */ {
 public:
  Payload();
  virtual ~Payload();

  Payload(const Payload& from);

  inline Payload& operator=(const Payload& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Payload(Payload&& from) noexcept
    : Payload() {
    *this = ::std::move(from);
  }

  inline Payload& operator=(Payload&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Payload& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Payload* internal_default_instance() {
    return reinterpret_cast<const Payload*>(
               &_Payload_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Payload* other);
  friend void swap(Payload& a, Payload& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Payload* New() const final {
    return CreateMaybeMessage<Payload>(NULL);
  }

  Payload* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Payload>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Payload& from);
  void MergeFrom(const Payload& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Payload* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Payload_Item Item;

  // accessors -------------------------------------------------------

  // repeated .xmsg.proto.Payload.Item item = 1;
  int item_size() const;
  void clear_item();
  static const int kItemFieldNumber = 1;
  ::xmsg::proto::Payload_Item* mutable_item(int index);
  ::google::protobuf::RepeatedPtrField< ::xmsg::proto::Payload_Item >*
      mutable_item();
  const ::xmsg::proto::Payload_Item& item(int index) const;
  ::xmsg::proto::Payload_Item* add_item();
  const ::google::protobuf::RepeatedPtrField< ::xmsg::proto::Payload_Item >&
      item() const;

  // @@protoc_insertion_point(class_scope:xmsg.proto.Payload)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::xmsg::proto::Payload_Item > item_;
  friend struct ::protobuf_data_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Data

// optional sint32 VLSINT32 = 1;
inline bool Data::has_vlsint32() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Data::set_has_vlsint32() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Data::clear_has_vlsint32() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Data::clear_vlsint32() {
  vlsint32_ = 0;
  clear_has_vlsint32();
}
inline ::google::protobuf::int32 Data::vlsint32() const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Data.VLSINT32)
  return vlsint32_;
}
inline void Data::set_vlsint32(::google::protobuf::int32 value) {
  set_has_vlsint32();
  vlsint32_ = value;
  // @@protoc_insertion_point(field_set:xmsg.proto.Data.VLSINT32)
}

// optional sint64 VLSINT64 = 2;
inline bool Data::has_vlsint64() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Data::set_has_vlsint64() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Data::clear_has_vlsint64() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Data::clear_vlsint64() {
  vlsint64_ = GOOGLE_LONGLONG(0);
  clear_has_vlsint64();
}
inline ::google::protobuf::int64 Data::vlsint64() const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Data.VLSINT64)
  return vlsint64_;
}
inline void Data::set_vlsint64(::google::protobuf::int64 value) {
  set_has_vlsint64();
  vlsint64_ = value;
  // @@protoc_insertion_point(field_set:xmsg.proto.Data.VLSINT64)
}

// optional sfixed32 FLSINT32 = 3;
inline bool Data::has_flsint32() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Data::set_has_flsint32() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Data::clear_has_flsint32() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Data::clear_flsint32() {
  flsint32_ = 0;
  clear_has_flsint32();
}
inline ::google::protobuf::int32 Data::flsint32() const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Data.FLSINT32)
  return flsint32_;
}
inline void Data::set_flsint32(::google::protobuf::int32 value) {
  set_has_flsint32();
  flsint32_ = value;
  // @@protoc_insertion_point(field_set:xmsg.proto.Data.FLSINT32)
}

// optional sfixed64 FLSINT64 = 4;
inline bool Data::has_flsint64() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Data::set_has_flsint64() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Data::clear_has_flsint64() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Data::clear_flsint64() {
  flsint64_ = GOOGLE_LONGLONG(0);
  clear_has_flsint64();
}
inline ::google::protobuf::int64 Data::flsint64() const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Data.FLSINT64)
  return flsint64_;
}
inline void Data::set_flsint64(::google::protobuf::int64 value) {
  set_has_flsint64();
  flsint64_ = value;
  // @@protoc_insertion_point(field_set:xmsg.proto.Data.FLSINT64)
}

// optional float FLOAT = 5;
inline bool Data::has_float_() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Data::set_has_float_() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Data::clear_has_float_() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Data::clear_float_() {
  float__ = 0;
  clear_has_float_();
}
inline float Data::float_() const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Data.FLOAT)
  return float__;
}
inline void Data::set_float_(float value) {
  set_has_float_();
  float__ = value;
  // @@protoc_insertion_point(field_set:xmsg.proto.Data.FLOAT)
}

// optional double DOUBLE = 6;
inline bool Data::has_double_() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Data::set_has_double_() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Data::clear_has_double_() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Data::clear_double_() {
  double__ = 0;
  clear_has_double_();
}
inline double Data::double_() const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Data.DOUBLE)
  return double__;
}
inline void Data::set_double_(double value) {
  set_has_double_();
  double__ = value;
  // @@protoc_insertion_point(field_set:xmsg.proto.Data.DOUBLE)
}

// optional string STRING = 7;
inline bool Data::has_string() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Data::set_has_string() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Data::clear_has_string() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Data::clear_string() {
  string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_string();
}
inline const ::std::string& Data::string() const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Data.STRING)
  return string_.GetNoArena();
}
inline void Data::set_string(const ::std::string& value) {
  set_has_string();
  string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xmsg.proto.Data.STRING)
}
#if LANG_CXX11
inline void Data::set_string(::std::string&& value) {
  set_has_string();
  string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xmsg.proto.Data.STRING)
}
#endif
inline void Data::set_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_string();
  string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xmsg.proto.Data.STRING)
}
inline void Data::set_string(const char* value, size_t size) {
  set_has_string();
  string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xmsg.proto.Data.STRING)
}
inline ::std::string* Data::mutable_string() {
  set_has_string();
  // @@protoc_insertion_point(field_mutable:xmsg.proto.Data.STRING)
  return string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Data::release_string() {
  // @@protoc_insertion_point(field_release:xmsg.proto.Data.STRING)
  if (!has_string()) {
    return NULL;
  }
  clear_has_string();
  return string_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Data::set_allocated_string(::std::string* string) {
  if (string != NULL) {
    set_has_string();
  } else {
    clear_has_string();
  }
  string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string);
  // @@protoc_insertion_point(field_set_allocated:xmsg.proto.Data.STRING)
}

// optional bytes BYTES = 8;
inline bool Data::has_bytes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Data::set_has_bytes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Data::clear_has_bytes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Data::clear_bytes() {
  bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bytes();
}
inline const ::std::string& Data::bytes() const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Data.BYTES)
  return bytes_.GetNoArena();
}
inline void Data::set_bytes(const ::std::string& value) {
  set_has_bytes();
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xmsg.proto.Data.BYTES)
}
#if LANG_CXX11
inline void Data::set_bytes(::std::string&& value) {
  set_has_bytes();
  bytes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xmsg.proto.Data.BYTES)
}
#endif
inline void Data::set_bytes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bytes();
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xmsg.proto.Data.BYTES)
}
inline void Data::set_bytes(const void* value, size_t size) {
  set_has_bytes();
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xmsg.proto.Data.BYTES)
}
inline ::std::string* Data::mutable_bytes() {
  set_has_bytes();
  // @@protoc_insertion_point(field_mutable:xmsg.proto.Data.BYTES)
  return bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Data::release_bytes() {
  // @@protoc_insertion_point(field_release:xmsg.proto.Data.BYTES)
  if (!has_bytes()) {
    return NULL;
  }
  clear_has_bytes();
  return bytes_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Data::set_allocated_bytes(::std::string* bytes) {
  if (bytes != NULL) {
    set_has_bytes();
  } else {
    clear_has_bytes();
  }
  bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bytes);
  // @@protoc_insertion_point(field_set_allocated:xmsg.proto.Data.BYTES)
}

// repeated sint32 VLSINT32A = 9;
inline int Data::vlsint32a_size() const {
  return vlsint32a_.size();
}
inline void Data::clear_vlsint32a() {
  vlsint32a_.Clear();
}
inline ::google::protobuf::int32 Data::vlsint32a(int index) const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Data.VLSINT32A)
  return vlsint32a_.Get(index);
}
inline void Data::set_vlsint32a(int index, ::google::protobuf::int32 value) {
  vlsint32a_.Set(index, value);
  // @@protoc_insertion_point(field_set:xmsg.proto.Data.VLSINT32A)
}
inline void Data::add_vlsint32a(::google::protobuf::int32 value) {
  vlsint32a_.Add(value);
  // @@protoc_insertion_point(field_add:xmsg.proto.Data.VLSINT32A)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Data::vlsint32a() const {
  // @@protoc_insertion_point(field_list:xmsg.proto.Data.VLSINT32A)
  return vlsint32a_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Data::mutable_vlsint32a() {
  // @@protoc_insertion_point(field_mutable_list:xmsg.proto.Data.VLSINT32A)
  return &vlsint32a_;
}

// repeated sint64 VLSINT64A = 10;
inline int Data::vlsint64a_size() const {
  return vlsint64a_.size();
}
inline void Data::clear_vlsint64a() {
  vlsint64a_.Clear();
}
inline ::google::protobuf::int64 Data::vlsint64a(int index) const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Data.VLSINT64A)
  return vlsint64a_.Get(index);
}
inline void Data::set_vlsint64a(int index, ::google::protobuf::int64 value) {
  vlsint64a_.Set(index, value);
  // @@protoc_insertion_point(field_set:xmsg.proto.Data.VLSINT64A)
}
inline void Data::add_vlsint64a(::google::protobuf::int64 value) {
  vlsint64a_.Add(value);
  // @@protoc_insertion_point(field_add:xmsg.proto.Data.VLSINT64A)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Data::vlsint64a() const {
  // @@protoc_insertion_point(field_list:xmsg.proto.Data.VLSINT64A)
  return vlsint64a_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Data::mutable_vlsint64a() {
  // @@protoc_insertion_point(field_mutable_list:xmsg.proto.Data.VLSINT64A)
  return &vlsint64a_;
}

// repeated sfixed32 FLSINT32A = 11;
inline int Data::flsint32a_size() const {
  return flsint32a_.size();
}
inline void Data::clear_flsint32a() {
  flsint32a_.Clear();
}
inline ::google::protobuf::int32 Data::flsint32a(int index) const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Data.FLSINT32A)
  return flsint32a_.Get(index);
}
inline void Data::set_flsint32a(int index, ::google::protobuf::int32 value) {
  flsint32a_.Set(index, value);
  // @@protoc_insertion_point(field_set:xmsg.proto.Data.FLSINT32A)
}
inline void Data::add_flsint32a(::google::protobuf::int32 value) {
  flsint32a_.Add(value);
  // @@protoc_insertion_point(field_add:xmsg.proto.Data.FLSINT32A)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Data::flsint32a() const {
  // @@protoc_insertion_point(field_list:xmsg.proto.Data.FLSINT32A)
  return flsint32a_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Data::mutable_flsint32a() {
  // @@protoc_insertion_point(field_mutable_list:xmsg.proto.Data.FLSINT32A)
  return &flsint32a_;
}

// repeated sfixed64 FLSINT64A = 12;
inline int Data::flsint64a_size() const {
  return flsint64a_.size();
}
inline void Data::clear_flsint64a() {
  flsint64a_.Clear();
}
inline ::google::protobuf::int64 Data::flsint64a(int index) const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Data.FLSINT64A)
  return flsint64a_.Get(index);
}
inline void Data::set_flsint64a(int index, ::google::protobuf::int64 value) {
  flsint64a_.Set(index, value);
  // @@protoc_insertion_point(field_set:xmsg.proto.Data.FLSINT64A)
}
inline void Data::add_flsint64a(::google::protobuf::int64 value) {
  flsint64a_.Add(value);
  // @@protoc_insertion_point(field_add:xmsg.proto.Data.FLSINT64A)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Data::flsint64a() const {
  // @@protoc_insertion_point(field_list:xmsg.proto.Data.FLSINT64A)
  return flsint64a_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Data::mutable_flsint64a() {
  // @@protoc_insertion_point(field_mutable_list:xmsg.proto.Data.FLSINT64A)
  return &flsint64a_;
}

// repeated float FLOATA = 13;
inline int Data::floata_size() const {
  return floata_.size();
}
inline void Data::clear_floata() {
  floata_.Clear();
}
inline float Data::floata(int index) const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Data.FLOATA)
  return floata_.Get(index);
}
inline void Data::set_floata(int index, float value) {
  floata_.Set(index, value);
  // @@protoc_insertion_point(field_set:xmsg.proto.Data.FLOATA)
}
inline void Data::add_floata(float value) {
  floata_.Add(value);
  // @@protoc_insertion_point(field_add:xmsg.proto.Data.FLOATA)
}
inline const ::google::protobuf::RepeatedField< float >&
Data::floata() const {
  // @@protoc_insertion_point(field_list:xmsg.proto.Data.FLOATA)
  return floata_;
}
inline ::google::protobuf::RepeatedField< float >*
Data::mutable_floata() {
  // @@protoc_insertion_point(field_mutable_list:xmsg.proto.Data.FLOATA)
  return &floata_;
}

// repeated double DOUBLEA = 14;
inline int Data::doublea_size() const {
  return doublea_.size();
}
inline void Data::clear_doublea() {
  doublea_.Clear();
}
inline double Data::doublea(int index) const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Data.DOUBLEA)
  return doublea_.Get(index);
}
inline void Data::set_doublea(int index, double value) {
  doublea_.Set(index, value);
  // @@protoc_insertion_point(field_set:xmsg.proto.Data.DOUBLEA)
}
inline void Data::add_doublea(double value) {
  doublea_.Add(value);
  // @@protoc_insertion_point(field_add:xmsg.proto.Data.DOUBLEA)
}
inline const ::google::protobuf::RepeatedField< double >&
Data::doublea() const {
  // @@protoc_insertion_point(field_list:xmsg.proto.Data.DOUBLEA)
  return doublea_;
}
inline ::google::protobuf::RepeatedField< double >*
Data::mutable_doublea() {
  // @@protoc_insertion_point(field_mutable_list:xmsg.proto.Data.DOUBLEA)
  return &doublea_;
}

// repeated string STRINGA = 15;
inline int Data::stringa_size() const {
  return stringa_.size();
}
inline void Data::clear_stringa() {
  stringa_.Clear();
}
inline const ::std::string& Data::stringa(int index) const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Data.STRINGA)
  return stringa_.Get(index);
}
inline ::std::string* Data::mutable_stringa(int index) {
  // @@protoc_insertion_point(field_mutable:xmsg.proto.Data.STRINGA)
  return stringa_.Mutable(index);
}
inline void Data::set_stringa(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:xmsg.proto.Data.STRINGA)
  stringa_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Data::set_stringa(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:xmsg.proto.Data.STRINGA)
  stringa_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Data::set_stringa(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  stringa_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:xmsg.proto.Data.STRINGA)
}
inline void Data::set_stringa(int index, const char* value, size_t size) {
  stringa_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:xmsg.proto.Data.STRINGA)
}
inline ::std::string* Data::add_stringa() {
  // @@protoc_insertion_point(field_add_mutable:xmsg.proto.Data.STRINGA)
  return stringa_.Add();
}
inline void Data::add_stringa(const ::std::string& value) {
  stringa_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:xmsg.proto.Data.STRINGA)
}
#if LANG_CXX11
inline void Data::add_stringa(::std::string&& value) {
  stringa_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:xmsg.proto.Data.STRINGA)
}
#endif
inline void Data::add_stringa(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  stringa_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:xmsg.proto.Data.STRINGA)
}
inline void Data::add_stringa(const char* value, size_t size) {
  stringa_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:xmsg.proto.Data.STRINGA)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Data::stringa() const {
  // @@protoc_insertion_point(field_list:xmsg.proto.Data.STRINGA)
  return stringa_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Data::mutable_stringa() {
  // @@protoc_insertion_point(field_mutable_list:xmsg.proto.Data.STRINGA)
  return &stringa_;
}

// repeated bytes BYTESA = 16;
inline int Data::bytesa_size() const {
  return bytesa_.size();
}
inline void Data::clear_bytesa() {
  bytesa_.Clear();
}
inline const ::std::string& Data::bytesa(int index) const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Data.BYTESA)
  return bytesa_.Get(index);
}
inline ::std::string* Data::mutable_bytesa(int index) {
  // @@protoc_insertion_point(field_mutable:xmsg.proto.Data.BYTESA)
  return bytesa_.Mutable(index);
}
inline void Data::set_bytesa(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:xmsg.proto.Data.BYTESA)
  bytesa_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Data::set_bytesa(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:xmsg.proto.Data.BYTESA)
  bytesa_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Data::set_bytesa(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  bytesa_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:xmsg.proto.Data.BYTESA)
}
inline void Data::set_bytesa(int index, const void* value, size_t size) {
  bytesa_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:xmsg.proto.Data.BYTESA)
}
inline ::std::string* Data::add_bytesa() {
  // @@protoc_insertion_point(field_add_mutable:xmsg.proto.Data.BYTESA)
  return bytesa_.Add();
}
inline void Data::add_bytesa(const ::std::string& value) {
  bytesa_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:xmsg.proto.Data.BYTESA)
}
#if LANG_CXX11
inline void Data::add_bytesa(::std::string&& value) {
  bytesa_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:xmsg.proto.Data.BYTESA)
}
#endif
inline void Data::add_bytesa(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  bytesa_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:xmsg.proto.Data.BYTESA)
}
inline void Data::add_bytesa(const void* value, size_t size) {
  bytesa_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:xmsg.proto.Data.BYTESA)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Data::bytesa() const {
  // @@protoc_insertion_point(field_list:xmsg.proto.Data.BYTESA)
  return bytesa_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Data::mutable_bytesa() {
  // @@protoc_insertion_point(field_mutable_list:xmsg.proto.Data.BYTESA)
  return &bytesa_;
}

// optional .xmsg.proto.Data.Type type = 17;
inline bool Data::has_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Data::set_has_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Data::clear_has_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Data::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::xmsg::proto::Data_Type Data::type() const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Data.type)
  return static_cast< ::xmsg::proto::Data_Type >(type_);
}
inline void Data::set_type(::xmsg::proto::Data_Type value) {
  assert(::xmsg::proto::Data_Type_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:xmsg.proto.Data.type)
}

// -------------------------------------------------------------------

// Payload_Item

// required string name = 1;
inline bool Payload_Item::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Payload_Item::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Payload_Item::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Payload_Item::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& Payload_Item::name() const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Payload.Item.name)
  return name_.GetNoArena();
}
inline void Payload_Item::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xmsg.proto.Payload.Item.name)
}
#if LANG_CXX11
inline void Payload_Item::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xmsg.proto.Payload.Item.name)
}
#endif
inline void Payload_Item::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xmsg.proto.Payload.Item.name)
}
inline void Payload_Item::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xmsg.proto.Payload.Item.name)
}
inline ::std::string* Payload_Item::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:xmsg.proto.Payload.Item.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Payload_Item::release_name() {
  // @@protoc_insertion_point(field_release:xmsg.proto.Payload.Item.name)
  if (!has_name()) {
    return NULL;
  }
  clear_has_name();
  return name_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Payload_Item::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:xmsg.proto.Payload.Item.name)
}

// required .xmsg.proto.Data data = 2;
inline bool Payload_Item::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Payload_Item::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Payload_Item::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Payload_Item::clear_data() {
  if (data_ != NULL) data_->Clear();
  clear_has_data();
}
inline const ::xmsg::proto::Data& Payload_Item::_internal_data() const {
  return *data_;
}
inline const ::xmsg::proto::Data& Payload_Item::data() const {
  const ::xmsg::proto::Data* p = data_;
  // @@protoc_insertion_point(field_get:xmsg.proto.Payload.Item.data)
  return p != NULL ? *p : *reinterpret_cast<const ::xmsg::proto::Data*>(
      &::xmsg::proto::_Data_default_instance_);
}
inline ::xmsg::proto::Data* Payload_Item::release_data() {
  // @@protoc_insertion_point(field_release:xmsg.proto.Payload.Item.data)
  clear_has_data();
  ::xmsg::proto::Data* temp = data_;
  data_ = NULL;
  return temp;
}
inline ::xmsg::proto::Data* Payload_Item::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    auto* p = CreateMaybeMessage<::xmsg::proto::Data>(GetArenaNoVirtual());
    data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:xmsg.proto.Payload.Item.data)
  return data_;
}
inline void Payload_Item::set_allocated_data(::xmsg::proto::Data* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete data_;
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    set_has_data();
  } else {
    clear_has_data();
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:xmsg.proto.Payload.Item.data)
}

// -------------------------------------------------------------------

// Payload

// repeated .xmsg.proto.Payload.Item item = 1;
inline int Payload::item_size() const {
  return item_.size();
}
inline void Payload::clear_item() {
  item_.Clear();
}
inline ::xmsg::proto::Payload_Item* Payload::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:xmsg.proto.Payload.item)
  return item_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::xmsg::proto::Payload_Item >*
Payload::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:xmsg.proto.Payload.item)
  return &item_;
}
inline const ::xmsg::proto::Payload_Item& Payload::item(int index) const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Payload.item)
  return item_.Get(index);
}
inline ::xmsg::proto::Payload_Item* Payload::add_item() {
  // @@protoc_insertion_point(field_add:xmsg.proto.Payload.item)
  return item_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::xmsg::proto::Payload_Item >&
Payload::item() const {
  // @@protoc_insertion_point(field_list:xmsg.proto.Payload.item)
  return item_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace xmsg

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::xmsg::proto::Data_Type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xmsg::proto::Data_Type>() {
  return ::xmsg::proto::Data_Type_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_data_2eproto
