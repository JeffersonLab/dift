// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: meta.proto

#ifndef PROTOBUF_INCLUDED_meta_2eproto
#define PROTOBUF_INCLUDED_meta_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_meta_2eproto 

namespace protobuf_meta_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_meta_2eproto
namespace xmsg {
namespace proto {
class Meta;
class MetaDefaultTypeInternal;
extern MetaDefaultTypeInternal _Meta_default_instance_;
}  // namespace proto
}  // namespace xmsg
namespace google {
namespace protobuf {
template<> ::xmsg::proto::Meta* Arena::CreateMaybeMessage<::xmsg::proto::Meta>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace xmsg {
namespace proto {

enum Meta_Status {
  Meta_Status_INFO = 1,
  Meta_Status_WARNING = 2,
  Meta_Status_ERROR = 3
};
bool Meta_Status_IsValid(int value);
const Meta_Status Meta_Status_Status_MIN = Meta_Status_INFO;
const Meta_Status Meta_Status_Status_MAX = Meta_Status_ERROR;
const int Meta_Status_Status_ARRAYSIZE = Meta_Status_Status_MAX + 1;

const ::google::protobuf::EnumDescriptor* Meta_Status_descriptor();
inline const ::std::string& Meta_Status_Name(Meta_Status value) {
  return ::google::protobuf::internal::NameOfEnum(
    Meta_Status_descriptor(), value);
}
inline bool Meta_Status_Parse(
    const ::std::string& name, Meta_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Meta_Status>(
    Meta_Status_descriptor(), name, value);
}
enum Meta_Endian {
  Meta_Endian_Little = 1,
  Meta_Endian_Big = 2
};
bool Meta_Endian_IsValid(int value);
const Meta_Endian Meta_Endian_Endian_MIN = Meta_Endian_Little;
const Meta_Endian Meta_Endian_Endian_MAX = Meta_Endian_Big;
const int Meta_Endian_Endian_ARRAYSIZE = Meta_Endian_Endian_MAX + 1;

const ::google::protobuf::EnumDescriptor* Meta_Endian_descriptor();
inline const ::std::string& Meta_Endian_Name(Meta_Endian value) {
  return ::google::protobuf::internal::NameOfEnum(
    Meta_Endian_descriptor(), value);
}
inline bool Meta_Endian_Parse(
    const ::std::string& name, Meta_Endian* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Meta_Endian>(
    Meta_Endian_descriptor(), name, value);
}
enum Meta_ControlAction {
  Meta_ControlAction_EXECUTE = 0,
  Meta_ControlAction_CONFIGURE = 1
};
bool Meta_ControlAction_IsValid(int value);
const Meta_ControlAction Meta_ControlAction_ControlAction_MIN = Meta_ControlAction_EXECUTE;
const Meta_ControlAction Meta_ControlAction_ControlAction_MAX = Meta_ControlAction_CONFIGURE;
const int Meta_ControlAction_ControlAction_ARRAYSIZE = Meta_ControlAction_ControlAction_MAX + 1;

const ::google::protobuf::EnumDescriptor* Meta_ControlAction_descriptor();
inline const ::std::string& Meta_ControlAction_Name(Meta_ControlAction value) {
  return ::google::protobuf::internal::NameOfEnum(
    Meta_ControlAction_descriptor(), value);
}
inline bool Meta_ControlAction_Parse(
    const ::std::string& name, Meta_ControlAction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Meta_ControlAction>(
    Meta_ControlAction_descriptor(), name, value);
}
enum Meta_SubControlAction {
  Meta_SubControlAction_SKIP = 0
};
bool Meta_SubControlAction_IsValid(int value);
const Meta_SubControlAction Meta_SubControlAction_SubControlAction_MIN = Meta_SubControlAction_SKIP;
const Meta_SubControlAction Meta_SubControlAction_SubControlAction_MAX = Meta_SubControlAction_SKIP;
const int Meta_SubControlAction_SubControlAction_ARRAYSIZE = Meta_SubControlAction_SubControlAction_MAX + 1;

const ::google::protobuf::EnumDescriptor* Meta_SubControlAction_descriptor();
inline const ::std::string& Meta_SubControlAction_Name(Meta_SubControlAction value) {
  return ::google::protobuf::internal::NameOfEnum(
    Meta_SubControlAction_descriptor(), value);
}
inline bool Meta_SubControlAction_Parse(
    const ::std::string& name, Meta_SubControlAction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Meta_SubControlAction>(
    Meta_SubControlAction_descriptor(), name, value);
}
// ===================================================================

class Meta : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:xmsg.proto.Meta) */ {
 public:
  Meta();
  virtual ~Meta();

  Meta(const Meta& from);

  inline Meta& operator=(const Meta& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Meta(Meta&& from) noexcept
    : Meta() {
    *this = ::std::move(from);
  }

  inline Meta& operator=(Meta&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Meta& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Meta* internal_default_instance() {
    return reinterpret_cast<const Meta*>(
               &_Meta_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Meta* other);
  friend void swap(Meta& a, Meta& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Meta* New() const final {
    return CreateMaybeMessage<Meta>(NULL);
  }

  Meta* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Meta>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Meta& from);
  void MergeFrom(const Meta& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Meta* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Meta_Status Status;
  static const Status INFO =
    Meta_Status_INFO;
  static const Status WARNING =
    Meta_Status_WARNING;
  static const Status ERROR =
    Meta_Status_ERROR;
  static inline bool Status_IsValid(int value) {
    return Meta_Status_IsValid(value);
  }
  static const Status Status_MIN =
    Meta_Status_Status_MIN;
  static const Status Status_MAX =
    Meta_Status_Status_MAX;
  static const int Status_ARRAYSIZE =
    Meta_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Status_descriptor() {
    return Meta_Status_descriptor();
  }
  static inline const ::std::string& Status_Name(Status value) {
    return Meta_Status_Name(value);
  }
  static inline bool Status_Parse(const ::std::string& name,
      Status* value) {
    return Meta_Status_Parse(name, value);
  }

  typedef Meta_Endian Endian;
  static const Endian Little =
    Meta_Endian_Little;
  static const Endian Big =
    Meta_Endian_Big;
  static inline bool Endian_IsValid(int value) {
    return Meta_Endian_IsValid(value);
  }
  static const Endian Endian_MIN =
    Meta_Endian_Endian_MIN;
  static const Endian Endian_MAX =
    Meta_Endian_Endian_MAX;
  static const int Endian_ARRAYSIZE =
    Meta_Endian_Endian_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Endian_descriptor() {
    return Meta_Endian_descriptor();
  }
  static inline const ::std::string& Endian_Name(Endian value) {
    return Meta_Endian_Name(value);
  }
  static inline bool Endian_Parse(const ::std::string& name,
      Endian* value) {
    return Meta_Endian_Parse(name, value);
  }

  typedef Meta_ControlAction ControlAction;
  static const ControlAction EXECUTE =
    Meta_ControlAction_EXECUTE;
  static const ControlAction CONFIGURE =
    Meta_ControlAction_CONFIGURE;
  static inline bool ControlAction_IsValid(int value) {
    return Meta_ControlAction_IsValid(value);
  }
  static const ControlAction ControlAction_MIN =
    Meta_ControlAction_ControlAction_MIN;
  static const ControlAction ControlAction_MAX =
    Meta_ControlAction_ControlAction_MAX;
  static const int ControlAction_ARRAYSIZE =
    Meta_ControlAction_ControlAction_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ControlAction_descriptor() {
    return Meta_ControlAction_descriptor();
  }
  static inline const ::std::string& ControlAction_Name(ControlAction value) {
    return Meta_ControlAction_Name(value);
  }
  static inline bool ControlAction_Parse(const ::std::string& name,
      ControlAction* value) {
    return Meta_ControlAction_Parse(name, value);
  }

  typedef Meta_SubControlAction SubControlAction;
  static const SubControlAction SKIP =
    Meta_SubControlAction_SKIP;
  static inline bool SubControlAction_IsValid(int value) {
    return Meta_SubControlAction_IsValid(value);
  }
  static const SubControlAction SubControlAction_MIN =
    Meta_SubControlAction_SubControlAction_MIN;
  static const SubControlAction SubControlAction_MAX =
    Meta_SubControlAction_SubControlAction_MAX;
  static const int SubControlAction_ARRAYSIZE =
    Meta_SubControlAction_SubControlAction_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SubControlAction_descriptor() {
    return Meta_SubControlAction_descriptor();
  }
  static inline const ::std::string& SubControlAction_Name(SubControlAction value) {
    return Meta_SubControlAction_Name(value);
  }
  static inline bool SubControlAction_Parse(const ::std::string& name,
      SubControlAction* value) {
    return Meta_SubControlAction_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string version = 1;
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // optional string description = 2;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 2;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // optional string author = 3;
  bool has_author() const;
  void clear_author();
  static const int kAuthorFieldNumber = 3;
  const ::std::string& author() const;
  void set_author(const ::std::string& value);
  #if LANG_CXX11
  void set_author(::std::string&& value);
  #endif
  void set_author(const char* value);
  void set_author(const char* value, size_t size);
  ::std::string* mutable_author();
  ::std::string* release_author();
  void set_allocated_author(::std::string* author);

  // optional string sender = 6;
  bool has_sender() const;
  void clear_sender();
  static const int kSenderFieldNumber = 6;
  const ::std::string& sender() const;
  void set_sender(const ::std::string& value);
  #if LANG_CXX11
  void set_sender(::std::string&& value);
  #endif
  void set_sender(const char* value);
  void set_sender(const char* value, size_t size);
  ::std::string* mutable_sender();
  ::std::string* release_sender();
  void set_allocated_sender(::std::string* sender);

  // optional string senderState = 7;
  bool has_senderstate() const;
  void clear_senderstate();
  static const int kSenderStateFieldNumber = 7;
  const ::std::string& senderstate() const;
  void set_senderstate(const ::std::string& value);
  #if LANG_CXX11
  void set_senderstate(::std::string&& value);
  #endif
  void set_senderstate(const char* value);
  void set_senderstate(const char* value, size_t size);
  ::std::string* mutable_senderstate();
  ::std::string* release_senderstate();
  void set_allocated_senderstate(::std::string* senderstate);

  // optional string composition = 10;
  bool has_composition() const;
  void clear_composition();
  static const int kCompositionFieldNumber = 10;
  const ::std::string& composition() const;
  void set_composition(const ::std::string& value);
  #if LANG_CXX11
  void set_composition(::std::string&& value);
  #endif
  void set_composition(const char* value);
  void set_composition(const char* value, size_t size);
  ::std::string* mutable_composition();
  ::std::string* release_composition();
  void set_allocated_composition(::std::string* composition);

  // required string dataType = 14;
  bool has_datatype() const;
  void clear_datatype();
  static const int kDataTypeFieldNumber = 14;
  const ::std::string& datatype() const;
  void set_datatype(const ::std::string& value);
  #if LANG_CXX11
  void set_datatype(::std::string&& value);
  #endif
  void set_datatype(const char* value);
  void set_datatype(const char* value, size_t size);
  ::std::string* mutable_datatype();
  ::std::string* release_datatype();
  void set_allocated_datatype(::std::string* datatype);

  // optional string datTypeDescription = 15;
  bool has_dattypedescription() const;
  void clear_dattypedescription();
  static const int kDatTypeDescriptionFieldNumber = 15;
  const ::std::string& dattypedescription() const;
  void set_dattypedescription(const ::std::string& value);
  #if LANG_CXX11
  void set_dattypedescription(::std::string&& value);
  #endif
  void set_dattypedescription(const char* value);
  void set_dattypedescription(const char* value, size_t size);
  ::std::string* mutable_dattypedescription();
  ::std::string* release_dattypedescription();
  void set_allocated_dattypedescription(::std::string* dattypedescription);

  // optional string replyTo = 16;
  bool has_replyto() const;
  void clear_replyto();
  static const int kReplyToFieldNumber = 16;
  const ::std::string& replyto() const;
  void set_replyto(const ::std::string& value);
  #if LANG_CXX11
  void set_replyto(::std::string&& value);
  #endif
  void set_replyto(const char* value);
  void set_replyto(const char* value, size_t size);
  ::std::string* mutable_replyto();
  ::std::string* release_replyto();
  void set_allocated_replyto(::std::string* replyto);

  // optional sfixed32 severityId = 5;
  bool has_severityid() const;
  void clear_severityid();
  static const int kSeverityIdFieldNumber = 5;
  ::google::protobuf::int32 severityid() const;
  void set_severityid(::google::protobuf::int32 value);

  // optional fixed32 communicationId = 8;
  bool has_communicationid() const;
  void clear_communicationid();
  static const int kCommunicationIdFieldNumber = 8;
  ::google::protobuf::uint32 communicationid() const;
  void set_communicationid(::google::protobuf::uint32 value);

  // optional sfixed64 executionTime = 11;
  bool has_executiontime() const;
  void clear_executiontime();
  static const int kExecutionTimeFieldNumber = 11;
  ::google::protobuf::int64 executiontime() const;
  void set_executiontime(::google::protobuf::int64 value);

  // optional .xmsg.proto.Meta.ControlAction action = 12;
  bool has_action() const;
  void clear_action();
  static const int kActionFieldNumber = 12;
  ::xmsg::proto::Meta_ControlAction action() const;
  void set_action(::xmsg::proto::Meta_ControlAction value);

  // optional .xmsg.proto.Meta.SubControlAction control = 13;
  bool has_control() const;
  void clear_control();
  static const int kControlFieldNumber = 13;
  ::xmsg::proto::Meta_SubControlAction control() const;
  void set_control(::xmsg::proto::Meta_SubControlAction value);

  // optional .xmsg.proto.Meta.Status status = 4;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 4;
  ::xmsg::proto::Meta_Status status() const;
  void set_status(::xmsg::proto::Meta_Status value);

  // optional .xmsg.proto.Meta.Endian byteOrder = 17;
  bool has_byteorder() const;
  void clear_byteorder();
  static const int kByteOrderFieldNumber = 17;
  ::xmsg::proto::Meta_Endian byteorder() const;
  void set_byteorder(::xmsg::proto::Meta_Endian value);

  // @@protoc_insertion_point(class_scope:xmsg.proto.Meta)
 private:
  void set_has_version();
  void clear_has_version();
  void set_has_description();
  void clear_has_description();
  void set_has_author();
  void clear_has_author();
  void set_has_status();
  void clear_has_status();
  void set_has_severityid();
  void clear_has_severityid();
  void set_has_sender();
  void clear_has_sender();
  void set_has_senderstate();
  void clear_has_senderstate();
  void set_has_communicationid();
  void clear_has_communicationid();
  void set_has_composition();
  void clear_has_composition();
  void set_has_executiontime();
  void clear_has_executiontime();
  void set_has_action();
  void clear_has_action();
  void set_has_control();
  void clear_has_control();
  void set_has_datatype();
  void clear_has_datatype();
  void set_has_dattypedescription();
  void clear_has_dattypedescription();
  void set_has_replyto();
  void clear_has_replyto();
  void set_has_byteorder();
  void clear_has_byteorder();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr author_;
  ::google::protobuf::internal::ArenaStringPtr sender_;
  ::google::protobuf::internal::ArenaStringPtr senderstate_;
  ::google::protobuf::internal::ArenaStringPtr composition_;
  ::google::protobuf::internal::ArenaStringPtr datatype_;
  ::google::protobuf::internal::ArenaStringPtr dattypedescription_;
  ::google::protobuf::internal::ArenaStringPtr replyto_;
  ::google::protobuf::int32 severityid_;
  ::google::protobuf::uint32 communicationid_;
  ::google::protobuf::int64 executiontime_;
  int action_;
  int control_;
  int status_;
  int byteorder_;
  friend struct ::protobuf_meta_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Meta

// optional string version = 1;
inline bool Meta::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Meta::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Meta::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Meta::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
}
inline const ::std::string& Meta::version() const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Meta.version)
  return version_.GetNoArena();
}
inline void Meta::set_version(const ::std::string& value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xmsg.proto.Meta.version)
}
#if LANG_CXX11
inline void Meta::set_version(::std::string&& value) {
  set_has_version();
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xmsg.proto.Meta.version)
}
#endif
inline void Meta::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xmsg.proto.Meta.version)
}
inline void Meta::set_version(const char* value, size_t size) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xmsg.proto.Meta.version)
}
inline ::std::string* Meta::mutable_version() {
  set_has_version();
  // @@protoc_insertion_point(field_mutable:xmsg.proto.Meta.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Meta::release_version() {
  // @@protoc_insertion_point(field_release:xmsg.proto.Meta.version)
  if (!has_version()) {
    return NULL;
  }
  clear_has_version();
  return version_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Meta::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    set_has_version();
  } else {
    clear_has_version();
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:xmsg.proto.Meta.version)
}

// optional string description = 2;
inline bool Meta::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Meta::set_has_description() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Meta::clear_has_description() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Meta::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
inline const ::std::string& Meta::description() const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Meta.description)
  return description_.GetNoArena();
}
inline void Meta::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xmsg.proto.Meta.description)
}
#if LANG_CXX11
inline void Meta::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xmsg.proto.Meta.description)
}
#endif
inline void Meta::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xmsg.proto.Meta.description)
}
inline void Meta::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xmsg.proto.Meta.description)
}
inline ::std::string* Meta::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:xmsg.proto.Meta.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Meta::release_description() {
  // @@protoc_insertion_point(field_release:xmsg.proto.Meta.description)
  if (!has_description()) {
    return NULL;
  }
  clear_has_description();
  return description_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Meta::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:xmsg.proto.Meta.description)
}

// optional string author = 3;
inline bool Meta::has_author() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Meta::set_has_author() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Meta::clear_has_author() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Meta::clear_author() {
  author_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_author();
}
inline const ::std::string& Meta::author() const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Meta.author)
  return author_.GetNoArena();
}
inline void Meta::set_author(const ::std::string& value) {
  set_has_author();
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xmsg.proto.Meta.author)
}
#if LANG_CXX11
inline void Meta::set_author(::std::string&& value) {
  set_has_author();
  author_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xmsg.proto.Meta.author)
}
#endif
inline void Meta::set_author(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_author();
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xmsg.proto.Meta.author)
}
inline void Meta::set_author(const char* value, size_t size) {
  set_has_author();
  author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xmsg.proto.Meta.author)
}
inline ::std::string* Meta::mutable_author() {
  set_has_author();
  // @@protoc_insertion_point(field_mutable:xmsg.proto.Meta.author)
  return author_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Meta::release_author() {
  // @@protoc_insertion_point(field_release:xmsg.proto.Meta.author)
  if (!has_author()) {
    return NULL;
  }
  clear_has_author();
  return author_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Meta::set_allocated_author(::std::string* author) {
  if (author != NULL) {
    set_has_author();
  } else {
    clear_has_author();
  }
  author_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), author);
  // @@protoc_insertion_point(field_set_allocated:xmsg.proto.Meta.author)
}

// optional .xmsg.proto.Meta.Status status = 4;
inline bool Meta::has_status() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Meta::set_has_status() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Meta::clear_has_status() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Meta::clear_status() {
  status_ = 1;
  clear_has_status();
}
inline ::xmsg::proto::Meta_Status Meta::status() const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Meta.status)
  return static_cast< ::xmsg::proto::Meta_Status >(status_);
}
inline void Meta::set_status(::xmsg::proto::Meta_Status value) {
  assert(::xmsg::proto::Meta_Status_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:xmsg.proto.Meta.status)
}

// optional sfixed32 severityId = 5;
inline bool Meta::has_severityid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Meta::set_has_severityid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Meta::clear_has_severityid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Meta::clear_severityid() {
  severityid_ = 0;
  clear_has_severityid();
}
inline ::google::protobuf::int32 Meta::severityid() const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Meta.severityId)
  return severityid_;
}
inline void Meta::set_severityid(::google::protobuf::int32 value) {
  set_has_severityid();
  severityid_ = value;
  // @@protoc_insertion_point(field_set:xmsg.proto.Meta.severityId)
}

// optional string sender = 6;
inline bool Meta::has_sender() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Meta::set_has_sender() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Meta::clear_has_sender() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Meta::clear_sender() {
  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sender();
}
inline const ::std::string& Meta::sender() const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Meta.sender)
  return sender_.GetNoArena();
}
inline void Meta::set_sender(const ::std::string& value) {
  set_has_sender();
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xmsg.proto.Meta.sender)
}
#if LANG_CXX11
inline void Meta::set_sender(::std::string&& value) {
  set_has_sender();
  sender_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xmsg.proto.Meta.sender)
}
#endif
inline void Meta::set_sender(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sender();
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xmsg.proto.Meta.sender)
}
inline void Meta::set_sender(const char* value, size_t size) {
  set_has_sender();
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xmsg.proto.Meta.sender)
}
inline ::std::string* Meta::mutable_sender() {
  set_has_sender();
  // @@protoc_insertion_point(field_mutable:xmsg.proto.Meta.sender)
  return sender_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Meta::release_sender() {
  // @@protoc_insertion_point(field_release:xmsg.proto.Meta.sender)
  if (!has_sender()) {
    return NULL;
  }
  clear_has_sender();
  return sender_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Meta::set_allocated_sender(::std::string* sender) {
  if (sender != NULL) {
    set_has_sender();
  } else {
    clear_has_sender();
  }
  sender_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender);
  // @@protoc_insertion_point(field_set_allocated:xmsg.proto.Meta.sender)
}

// optional string senderState = 7;
inline bool Meta::has_senderstate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Meta::set_has_senderstate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Meta::clear_has_senderstate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Meta::clear_senderstate() {
  senderstate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_senderstate();
}
inline const ::std::string& Meta::senderstate() const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Meta.senderState)
  return senderstate_.GetNoArena();
}
inline void Meta::set_senderstate(const ::std::string& value) {
  set_has_senderstate();
  senderstate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xmsg.proto.Meta.senderState)
}
#if LANG_CXX11
inline void Meta::set_senderstate(::std::string&& value) {
  set_has_senderstate();
  senderstate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xmsg.proto.Meta.senderState)
}
#endif
inline void Meta::set_senderstate(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_senderstate();
  senderstate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xmsg.proto.Meta.senderState)
}
inline void Meta::set_senderstate(const char* value, size_t size) {
  set_has_senderstate();
  senderstate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xmsg.proto.Meta.senderState)
}
inline ::std::string* Meta::mutable_senderstate() {
  set_has_senderstate();
  // @@protoc_insertion_point(field_mutable:xmsg.proto.Meta.senderState)
  return senderstate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Meta::release_senderstate() {
  // @@protoc_insertion_point(field_release:xmsg.proto.Meta.senderState)
  if (!has_senderstate()) {
    return NULL;
  }
  clear_has_senderstate();
  return senderstate_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Meta::set_allocated_senderstate(::std::string* senderstate) {
  if (senderstate != NULL) {
    set_has_senderstate();
  } else {
    clear_has_senderstate();
  }
  senderstate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), senderstate);
  // @@protoc_insertion_point(field_set_allocated:xmsg.proto.Meta.senderState)
}

// optional fixed32 communicationId = 8;
inline bool Meta::has_communicationid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Meta::set_has_communicationid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Meta::clear_has_communicationid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Meta::clear_communicationid() {
  communicationid_ = 0u;
  clear_has_communicationid();
}
inline ::google::protobuf::uint32 Meta::communicationid() const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Meta.communicationId)
  return communicationid_;
}
inline void Meta::set_communicationid(::google::protobuf::uint32 value) {
  set_has_communicationid();
  communicationid_ = value;
  // @@protoc_insertion_point(field_set:xmsg.proto.Meta.communicationId)
}

// optional string composition = 10;
inline bool Meta::has_composition() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Meta::set_has_composition() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Meta::clear_has_composition() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Meta::clear_composition() {
  composition_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_composition();
}
inline const ::std::string& Meta::composition() const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Meta.composition)
  return composition_.GetNoArena();
}
inline void Meta::set_composition(const ::std::string& value) {
  set_has_composition();
  composition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xmsg.proto.Meta.composition)
}
#if LANG_CXX11
inline void Meta::set_composition(::std::string&& value) {
  set_has_composition();
  composition_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xmsg.proto.Meta.composition)
}
#endif
inline void Meta::set_composition(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_composition();
  composition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xmsg.proto.Meta.composition)
}
inline void Meta::set_composition(const char* value, size_t size) {
  set_has_composition();
  composition_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xmsg.proto.Meta.composition)
}
inline ::std::string* Meta::mutable_composition() {
  set_has_composition();
  // @@protoc_insertion_point(field_mutable:xmsg.proto.Meta.composition)
  return composition_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Meta::release_composition() {
  // @@protoc_insertion_point(field_release:xmsg.proto.Meta.composition)
  if (!has_composition()) {
    return NULL;
  }
  clear_has_composition();
  return composition_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Meta::set_allocated_composition(::std::string* composition) {
  if (composition != NULL) {
    set_has_composition();
  } else {
    clear_has_composition();
  }
  composition_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), composition);
  // @@protoc_insertion_point(field_set_allocated:xmsg.proto.Meta.composition)
}

// optional sfixed64 executionTime = 11;
inline bool Meta::has_executiontime() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Meta::set_has_executiontime() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Meta::clear_has_executiontime() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Meta::clear_executiontime() {
  executiontime_ = GOOGLE_LONGLONG(0);
  clear_has_executiontime();
}
inline ::google::protobuf::int64 Meta::executiontime() const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Meta.executionTime)
  return executiontime_;
}
inline void Meta::set_executiontime(::google::protobuf::int64 value) {
  set_has_executiontime();
  executiontime_ = value;
  // @@protoc_insertion_point(field_set:xmsg.proto.Meta.executionTime)
}

// optional .xmsg.proto.Meta.ControlAction action = 12;
inline bool Meta::has_action() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Meta::set_has_action() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Meta::clear_has_action() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Meta::clear_action() {
  action_ = 0;
  clear_has_action();
}
inline ::xmsg::proto::Meta_ControlAction Meta::action() const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Meta.action)
  return static_cast< ::xmsg::proto::Meta_ControlAction >(action_);
}
inline void Meta::set_action(::xmsg::proto::Meta_ControlAction value) {
  assert(::xmsg::proto::Meta_ControlAction_IsValid(value));
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:xmsg.proto.Meta.action)
}

// optional .xmsg.proto.Meta.SubControlAction control = 13;
inline bool Meta::has_control() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Meta::set_has_control() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Meta::clear_has_control() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Meta::clear_control() {
  control_ = 0;
  clear_has_control();
}
inline ::xmsg::proto::Meta_SubControlAction Meta::control() const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Meta.control)
  return static_cast< ::xmsg::proto::Meta_SubControlAction >(control_);
}
inline void Meta::set_control(::xmsg::proto::Meta_SubControlAction value) {
  assert(::xmsg::proto::Meta_SubControlAction_IsValid(value));
  set_has_control();
  control_ = value;
  // @@protoc_insertion_point(field_set:xmsg.proto.Meta.control)
}

// required string dataType = 14;
inline bool Meta::has_datatype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Meta::set_has_datatype() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Meta::clear_has_datatype() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Meta::clear_datatype() {
  datatype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_datatype();
}
inline const ::std::string& Meta::datatype() const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Meta.dataType)
  return datatype_.GetNoArena();
}
inline void Meta::set_datatype(const ::std::string& value) {
  set_has_datatype();
  datatype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xmsg.proto.Meta.dataType)
}
#if LANG_CXX11
inline void Meta::set_datatype(::std::string&& value) {
  set_has_datatype();
  datatype_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xmsg.proto.Meta.dataType)
}
#endif
inline void Meta::set_datatype(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_datatype();
  datatype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xmsg.proto.Meta.dataType)
}
inline void Meta::set_datatype(const char* value, size_t size) {
  set_has_datatype();
  datatype_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xmsg.proto.Meta.dataType)
}
inline ::std::string* Meta::mutable_datatype() {
  set_has_datatype();
  // @@protoc_insertion_point(field_mutable:xmsg.proto.Meta.dataType)
  return datatype_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Meta::release_datatype() {
  // @@protoc_insertion_point(field_release:xmsg.proto.Meta.dataType)
  if (!has_datatype()) {
    return NULL;
  }
  clear_has_datatype();
  return datatype_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Meta::set_allocated_datatype(::std::string* datatype) {
  if (datatype != NULL) {
    set_has_datatype();
  } else {
    clear_has_datatype();
  }
  datatype_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), datatype);
  // @@protoc_insertion_point(field_set_allocated:xmsg.proto.Meta.dataType)
}

// optional string datTypeDescription = 15;
inline bool Meta::has_dattypedescription() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Meta::set_has_dattypedescription() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Meta::clear_has_dattypedescription() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Meta::clear_dattypedescription() {
  dattypedescription_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dattypedescription();
}
inline const ::std::string& Meta::dattypedescription() const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Meta.datTypeDescription)
  return dattypedescription_.GetNoArena();
}
inline void Meta::set_dattypedescription(const ::std::string& value) {
  set_has_dattypedescription();
  dattypedescription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xmsg.proto.Meta.datTypeDescription)
}
#if LANG_CXX11
inline void Meta::set_dattypedescription(::std::string&& value) {
  set_has_dattypedescription();
  dattypedescription_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xmsg.proto.Meta.datTypeDescription)
}
#endif
inline void Meta::set_dattypedescription(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_dattypedescription();
  dattypedescription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xmsg.proto.Meta.datTypeDescription)
}
inline void Meta::set_dattypedescription(const char* value, size_t size) {
  set_has_dattypedescription();
  dattypedescription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xmsg.proto.Meta.datTypeDescription)
}
inline ::std::string* Meta::mutable_dattypedescription() {
  set_has_dattypedescription();
  // @@protoc_insertion_point(field_mutable:xmsg.proto.Meta.datTypeDescription)
  return dattypedescription_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Meta::release_dattypedescription() {
  // @@protoc_insertion_point(field_release:xmsg.proto.Meta.datTypeDescription)
  if (!has_dattypedescription()) {
    return NULL;
  }
  clear_has_dattypedescription();
  return dattypedescription_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Meta::set_allocated_dattypedescription(::std::string* dattypedescription) {
  if (dattypedescription != NULL) {
    set_has_dattypedescription();
  } else {
    clear_has_dattypedescription();
  }
  dattypedescription_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dattypedescription);
  // @@protoc_insertion_point(field_set_allocated:xmsg.proto.Meta.datTypeDescription)
}

// optional string replyTo = 16;
inline bool Meta::has_replyto() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Meta::set_has_replyto() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Meta::clear_has_replyto() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Meta::clear_replyto() {
  replyto_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_replyto();
}
inline const ::std::string& Meta::replyto() const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Meta.replyTo)
  return replyto_.GetNoArena();
}
inline void Meta::set_replyto(const ::std::string& value) {
  set_has_replyto();
  replyto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:xmsg.proto.Meta.replyTo)
}
#if LANG_CXX11
inline void Meta::set_replyto(::std::string&& value) {
  set_has_replyto();
  replyto_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:xmsg.proto.Meta.replyTo)
}
#endif
inline void Meta::set_replyto(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_replyto();
  replyto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:xmsg.proto.Meta.replyTo)
}
inline void Meta::set_replyto(const char* value, size_t size) {
  set_has_replyto();
  replyto_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:xmsg.proto.Meta.replyTo)
}
inline ::std::string* Meta::mutable_replyto() {
  set_has_replyto();
  // @@protoc_insertion_point(field_mutable:xmsg.proto.Meta.replyTo)
  return replyto_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Meta::release_replyto() {
  // @@protoc_insertion_point(field_release:xmsg.proto.Meta.replyTo)
  if (!has_replyto()) {
    return NULL;
  }
  clear_has_replyto();
  return replyto_.ReleaseNonDefaultNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Meta::set_allocated_replyto(::std::string* replyto) {
  if (replyto != NULL) {
    set_has_replyto();
  } else {
    clear_has_replyto();
  }
  replyto_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), replyto);
  // @@protoc_insertion_point(field_set_allocated:xmsg.proto.Meta.replyTo)
}

// optional .xmsg.proto.Meta.Endian byteOrder = 17;
inline bool Meta::has_byteorder() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Meta::set_has_byteorder() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Meta::clear_has_byteorder() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Meta::clear_byteorder() {
  byteorder_ = 1;
  clear_has_byteorder();
}
inline ::xmsg::proto::Meta_Endian Meta::byteorder() const {
  // @@protoc_insertion_point(field_get:xmsg.proto.Meta.byteOrder)
  return static_cast< ::xmsg::proto::Meta_Endian >(byteorder_);
}
inline void Meta::set_byteorder(::xmsg::proto::Meta_Endian value) {
  assert(::xmsg::proto::Meta_Endian_IsValid(value));
  set_has_byteorder();
  byteorder_ = value;
  // @@protoc_insertion_point(field_set:xmsg.proto.Meta.byteOrder)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace xmsg

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::xmsg::proto::Meta_Status> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xmsg::proto::Meta_Status>() {
  return ::xmsg::proto::Meta_Status_descriptor();
}
template <> struct is_proto_enum< ::xmsg::proto::Meta_Endian> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xmsg::proto::Meta_Endian>() {
  return ::xmsg::proto::Meta_Endian_descriptor();
}
template <> struct is_proto_enum< ::xmsg::proto::Meta_ControlAction> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xmsg::proto::Meta_ControlAction>() {
  return ::xmsg::proto::Meta_ControlAction_descriptor();
}
template <> struct is_proto_enum< ::xmsg::proto::Meta_SubControlAction> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::xmsg::proto::Meta_SubControlAction>() {
  return ::xmsg::proto::Meta_SubControlAction_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_meta_2eproto
